<button type="@TypeString" class="px-5 py-2.5 rounded-lg font-bold @Classes" disabled="@IsTaskRunning" @onclick="OnClickCallback">
    @if (IsTaskRunning)
    {
        <div class="flex items-center gap-2">
            <svg class="animate-spin" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                <path d="M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41zm-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9z" />
                <path fill-rule="evenodd" d="M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5.002 5.002 0 0 0 8 3zM3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9H3.1z" />
            </svg>
            <span>@ActionText</span>
        </div>
    }
    else
    {
        <span>@Text</span>
    }
</button>

@code {
    [Parameter]
    public ButtonType Type { get; set; } = ButtonType.Button;

    [Parameter]
    public string Classes { get; set; } = string.Empty;

    [Parameter]
    public bool IsTaskRunning { get; set; } = false;

    [Parameter]
    public string Text { get; set; } = string.Empty;

    [Parameter]
    public string ActionText { get; set; } = string.Empty;

    [Parameter]
    public EventCallback OnClickCallback { get; set; }

    private string TypeString => Type switch
    {
        ButtonType.Submit => "submit",
        _ => "button"
    };
}
