@page "/search"
@attribute [Authorize(Roles = "admin")]

<EpisodesTitle Text="Search" />

<EditForm Model="@EditModel" OnValidSubmit="@SearchAsync" class="flex flex-col mt-2 gap-2">
    <div class="flex flex-col gap-2">
        <label for="add">Search tv show by title or original title. Empty field fetches all.</label>
        <InputText id="add" @ref="Input" class="form-control" @bind-Value="@EditModel.Search" bind-Value:event="OnInput"></InputText>
    </div>
    <div>
        <EpisodesButton Classes="btn-success" Type="ButtonType.Submit" IsTaskRunning=@Searching Text="Search" ActionText="Searching..." />
    </div>
</EditForm>


@if (Loading)
{
    <LoadingIndicator Text="Loading..." />
}
else
{
    if (ShowList.Length == 0)
    {
        <div class="mt-2 text-lg">No tv show found!</div>
    }
    else
    {
        <div class="mt-2">
            @if (Query.Page > 0)
            {
                <EpisodesButton Classes="btn-other" Text="Show previous page" OnClickCallback="async () => await ChangePageAsync(Query.Page - 1)" />
            }
            <div class="mt-2 flex flex-col gap-2">
                @foreach (TVShow show in ShowList)
                {
                    <div class="bg-slate-400 mb-2 rounded-lg text-black">
                        <a href="/edit/@show.Id" class="p-2">@show.Title - @show.Status - @show.UnwatchedEpisodeCount of @show.EpisodeCount</a>
                    </div>
                }
            </div>

            @if (ShowList.Length >= Query.PageSize)
            {
                <EpisodesButton Classes="btn-other" Text="Show next page" OnClickCallback="async () => await ChangePageAsync(Query.Page + 1)" />
            }
        </div>
    }
}
