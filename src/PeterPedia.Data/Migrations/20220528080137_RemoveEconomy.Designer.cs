// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PeterPedia.Data;

#nullable disable

namespace PeterPedia.Data.Migrations;

[DbContext(typeof(PeterPediaContext))]
[Migration("20220528080137_RemoveEconomy")]
partial class RemoveEconomy
{
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

        modelBuilder.Entity("AuthorEFBookEF", b =>
            {
                b.Property<int>("AuthorsId")
                    .HasColumnType("INTEGER");

                b.Property<int>("BooksId")
                    .HasColumnType("INTEGER");

                b.HasKey("AuthorsId", "BooksId");

                b.HasIndex("BooksId");

                b.ToTable("authorbook", (string)null);
            });

        modelBuilder.Entity("PeterPedia.Data.Models.AlbumEF", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("album");
            });

        modelBuilder.Entity("PeterPedia.Data.Models.ArticleEF", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<string>("Content")
                    .IsRequired()
                    .HasMaxLength(2000)
                    .HasColumnType("TEXT");

                b.Property<DateTime>("PublishDate")
                    .HasColumnType("TEXT");

                b.Property<DateTime?>("ReadDate")
                    .HasColumnType("TEXT");

                b.Property<int>("SubscriptionId")
                    .HasColumnType("INTEGER");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("TEXT");

                b.Property<string>("Url")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.HasIndex("SubscriptionId");

                b.ToTable("article");
            });

        modelBuilder.Entity("PeterPedia.Data.Models.AuthorEF", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<DateOnly?>("DateOfBirth")
                    .HasColumnType("TEXT");

                b.Property<DateTime>("LastUpdated")
                    .HasColumnType("TEXT");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("author");
            });

        modelBuilder.Entity("PeterPedia.Data.Models.BookEF", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<DateTime>("LastUpdated")
                    .HasColumnType("TEXT");

                b.Property<int>("State")
                    .HasColumnType("INTEGER");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("book");
            });

        modelBuilder.Entity("PeterPedia.Data.Models.EpisodeEF", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<DateTime?>("AirDate")
                    .HasColumnType("TEXT");

                b.Property<int>("EpisodeNumber")
                    .HasColumnType("INTEGER");

                b.Property<int>("SeasonId")
                    .HasColumnType("INTEGER");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<bool>("Watched")
                    .HasColumnType("INTEGER");

                b.HasKey("Id");

                b.HasIndex("SeasonId");

                b.ToTable("episode");
            });

        modelBuilder.Entity("PeterPedia.Data.Models.ErrorEF", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<string>("Error")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<string>("Module")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<DateTime>("Timestamp")
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("error");
            });

        modelBuilder.Entity("PeterPedia.Data.Models.LinkEF", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<string>("Url")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("link");
            });

        modelBuilder.Entity("PeterPedia.Data.Models.MovieEF", b =>
            {
                b.Property<int>("Id")
                    .HasColumnType("INTEGER");

                b.Property<string>("ETag")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<string>("ImdbId")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<DateTime>("LastUpdate")
                    .HasColumnType("TEXT");

                b.Property<string>("OriginalLanguage")
                    .IsRequired()
                    .HasMaxLength(2)
                    .HasColumnType("TEXT");

                b.Property<string>("OriginalTitle")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<DateTime?>("ReleaseDate")
                    .HasColumnType("TEXT");

                b.Property<int?>("RunTime")
                    .HasColumnType("INTEGER");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnType("TEXT");

                b.Property<DateTime?>("WatchedDate")
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("movie");
            });

        modelBuilder.Entity("PeterPedia.Data.Models.PhotoEF", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<string>("AbsolutePath")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<int>("AlbumId")
                    .HasColumnType("INTEGER");

                b.Property<string>("FileName")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.HasIndex("AlbumId");

                b.ToTable("photo");
            });

        modelBuilder.Entity("PeterPedia.Data.Models.SeasonEF", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<int>("SeasonNumber")
                    .HasColumnType("INTEGER");

                b.Property<int>("ShowId")
                    .HasColumnType("INTEGER");

                b.HasKey("Id");

                b.HasIndex("ShowId");

                b.ToTable("season");
            });

        modelBuilder.Entity("PeterPedia.Data.Models.ShowEF", b =>
            {
                b.Property<int>("Id")
                    .HasColumnType("INTEGER");

                b.Property<string>("ETag")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<DateTime>("LastUpdate")
                    .HasColumnType("TEXT");

                b.Property<string>("Status")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("show");
            });

        modelBuilder.Entity("PeterPedia.Data.Models.SubscriptionEF", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<string>("Group")
                    .HasColumnType("TEXT");

                b.Property<byte[]>("Hash")
                    .IsRequired()
                    .HasMaxLength(32)
                    .HasColumnType("BLOB");

                b.Property<DateTime>("LastUpdate")
                    .HasColumnType("TEXT");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("TEXT");

                b.Property<int>("UpdateIntervalMinute")
                    .HasColumnType("INTEGER");

                b.Property<string>("Url")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("subscription");
            });

        modelBuilder.Entity("PeterPedia.Data.Models.VideoEF", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<string>("AbsolutePath")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<string>("Directory")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<TimeSpan>("Duration")
                    .HasColumnType("TEXT");

                b.Property<string>("FileName")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<string>("Type")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("video");
            });

        modelBuilder.Entity("AuthorEFBookEF", b =>
            {
                b.HasOne("PeterPedia.Data.Models.AuthorEF", null)
                    .WithMany()
                    .HasForeignKey("AuthorsId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("PeterPedia.Data.Models.BookEF", null)
                    .WithMany()
                    .HasForeignKey("BooksId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

        modelBuilder.Entity("PeterPedia.Data.Models.ArticleEF", b =>
            {
                b.HasOne("PeterPedia.Data.Models.SubscriptionEF", "Subscription")
                    .WithMany("Articles")
                    .HasForeignKey("SubscriptionId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Subscription");
            });

        modelBuilder.Entity("PeterPedia.Data.Models.EpisodeEF", b =>
            {
                b.HasOne("PeterPedia.Data.Models.SeasonEF", "Season")
                    .WithMany("Episodes")
                    .HasForeignKey("SeasonId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Season");
            });

        modelBuilder.Entity("PeterPedia.Data.Models.PhotoEF", b =>
            {
                b.HasOne("PeterPedia.Data.Models.AlbumEF", "Album")
                    .WithMany("Photos")
                    .HasForeignKey("AlbumId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Album");
            });

        modelBuilder.Entity("PeterPedia.Data.Models.SeasonEF", b =>
            {
                b.HasOne("PeterPedia.Data.Models.ShowEF", "Show")
                    .WithMany("Seasons")
                    .HasForeignKey("ShowId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Show");
            });

        modelBuilder.Entity("PeterPedia.Data.Models.AlbumEF", b =>
            {
                b.Navigation("Photos");
            });

        modelBuilder.Entity("PeterPedia.Data.Models.SeasonEF", b =>
            {
                b.Navigation("Episodes");
            });

        modelBuilder.Entity("PeterPedia.Data.Models.ShowEF", b =>
            {
                b.Navigation("Seasons");
            });

        modelBuilder.Entity("PeterPedia.Data.Models.SubscriptionEF", b =>
            {
                b.Navigation("Articles");
            });
#pragma warning restore 612, 618
    }
}
